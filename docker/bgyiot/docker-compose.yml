# "docker-compose.yml"
#前台运行打印日志：docker-compose up #前台运行一次
#后台运行命令： docker-compose up -d   #如果只运行一次，就docker run; docker run
#查看运行情况： docker-compose ps
#停止运行：    docker-compose kill
#查看日志：    docker-compose logs -f
#查看日志：    docker-compose down #删除上次所有运行记录&停止，否则 docker-compose up,还是接着上次的运行记录 （这样下次使用docker-compose up时就一定会是新容器了）；
#重新启动单个容器：docker-compose restart nginx
#proxy_pass  http://[宿主机IP]:8000; 多个容器访问，ip问题。

#如何在Nginx配置中使用OS环境变量？ https://cloud.tencent.com/developer/ask/150892/answer/262145
#论Docker容器中的Nginx配置文件如何读取系统/容器的环境变量 https://blog.csdn.net/jiangqian6481/article/details/78310247
#Dockerfile与docker-compose设置环境变量 https://blog.csdn.net/ywk_hax/article/details/86531348
# docker-compose.yml 官方编辑文档地址： https://docs.docker.com/compose/compose-file/

version: '3.7'
services:
  nginx:
    image: openresty/openresty:1.13.6.2-1-centos
    # https://hub.docker.com/r/openresty/openresty
    #image: docker pull openresty/openresty:1.15.8.2-3-alpine    # https://hub.docker.com/r/openresty/openresty
    ports:
      - "80:80" #外部端口：内部端口
      - "443:443"
    # 数据卷
    volumes: #磁盘映射； 当前目录下面的data/conf.d映射到容器里面
      - "./data/conf:/usr/local/openresty/nginx/conf"
      - "./data/html:/usr/local/openresty/nginx/html"
      - "./data/log:/usr/local/openresty/nginx/logs"
      - "./data/cert:/usr/local/openresty/cert/"
    environment:
      TZ: Asia/Shanghai
      #LINUX_HOST: $(ifconfig eth0|grep inet|awk '{print $2}')  #主机的ip,不同server需要修改；本机调试，每次电脑重启，也需要修改。
      LINUX_HOST: 192.168.0.208
    networks:
      - front

  iot-adminserver:
    image: hub.c.163.com/dazer1992/adminserver:0.01
    container_name: adminserver
    restart: unless-stopped
    depends_on:
      - nginx
    ports:
      - "8000:8011"
    networks:
      front:

  iot-eureka:
    image: hub.c.163.com/dazer1992/iot-eureka:0.01
    container_name: eureka
    restart: unless-stopped
    depends_on:
      - iot-adminserver
    ports:
      - "8001:8080"

  iot-platform-core:
    image: hub.c.163.com/dazer1992/iot-platform-core:0.1
    container_name: iot-platform
    restart: unless-stopped
    depends_on:
      - iot-eureka
    ports:
      - "8002:8881"
    networks:
      - front
      - backend

networks:
  front:
  backend:
