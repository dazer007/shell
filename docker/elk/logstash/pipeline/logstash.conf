##pipline/logstash.conf
## eg: spring系统日志，需要需改日志文件，日志文件输出的时候输出一份到 logstash的5000端口，logstach在推送给 es.
input {
  tcp {
    port => 5000
    type => syslog
  }
  udp {
    port => 5000
    type => syslog
  }
}
## Add your filters / logstash plugins configuration here 也可也不要直接空着。 这对抓取的数据进行格式化处理，变成 可以方便识别的n个字段。
filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}

output {
  if [type] ==  "syslog" {
      elasticsearch {
        hosts => ["elasticsearch:9200"]
        user => "elastic"
        password => "changeme"
      }
      # 将日志输出到当前的终端上显示
     #stdout { codec => rubydebug }
  }
}
